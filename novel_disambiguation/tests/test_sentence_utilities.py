import os
import unittest
import constant_values
from ..constants import ccg_values
from ..utilities import build_utilities
from ..utilities import sentence_utilities
__author__ = 'Ethan A. Hill'


class TestSentenceUtilities(unittest.TestCase):
    _original_working_directory = None

    @classmethod
    def setUpClass(cls):
        # Move to the ccgbank directory to start the process
        cls._original_working_directory = os.getcwd()
        ccgbank_expanded = os.path.expandvars(ccg_values.CCGBANK_PATH)
        os.chdir(ccgbank_expanded)
        # Generate the logical form if it doesn't exist
        parse_dir = os.path.expandvars(constant_values.FULL_PATH_TEST_DIR)
        logical_form = os.path.expandvars(constant_values.FULL_PATH_TEST_LF)
        real = os.path.expandvars(constant_values.FULL_PATH_TEST_REALIZATIONS)
        text_file = constant_values.DATA_SUB_TEST_SENTENCES
        if not os.path.exists(parse_dir) or not os.path.exists(logical_form):
            build_utilities.ccg_build_parse(text_file)
        if not os.path.exists(real):
            build_utilities.ccg_build_realize(text_file)


    @classmethod
    def tearDownClass(cls):
        os.chdir(cls._original_working_directory)

    def setUp(self):
        self.parse_output_dir = os.path.expandvars(
            constant_values.FULL_PATH_TEST_DIR)

    def test_sentence_factory(self):
        sentences = sentence_utilities.sentence_factory(self.parse_output_dir)
        self.assertIsNotNone(sentences, 'factory returned None')
        self.assertGreater(
            len(sentences), 0, 'no sentences were not generated by factory')

    def test_prepare_reversals(self):
        sentences = sentence_utilities.sentence_factory(self.parse_output_dir)
        sentence_utilities.prepare_reversals(sentences, self.parse_output_dir)

    def test_verify_reversals(self):
        sentences = sentence_utilities.sentence_factory(self.parse_output_dir)
        sentence_utilities.prepare_reversals(sentences, self.parse_output_dir)
        sentence_utilities.validate_reversals(sentences, self.parse_output_dir)

if __name__ == '__main__':
    unittest.main()
